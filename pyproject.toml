[project]
name = "pytest-copier"
description = "A pytest plugin to help testing Copier templates"
authors = [
    {name = "Axel Haustant", email = "noirbizarre@gmail.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = []
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

dependencies = [
    "pytest>=7.3.2",
    "copier>=9.0.0",
    "pytest-dir-equal>=0.2",
    "pytest-gitconfig>=0.4",
]
[project.urls]
Homepage = "https://github.com/noirbizarre/pytest-copier"
Documentation = "https://github.com/noirbizarre/pytest-copier#readme"
Repository = "https://github.com/noirbizarre/pytest-copier"
Issues = "https://github.com/noirbizarre/pytest-copier/issues"


[project.entry-points.pytest11]
copier = "pytest_copier.plugin"


[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm.version]
source = "scm"
write_to = "pytest_copier/VERSION"


[tool.pdm.dev-dependencies]
test = [
    "pytest-sugar>=0.9.5",
    "coverage[toml]>=4",
]
lint = [
    "black>=23.10.0",
    "mypy>=1.7.0",
    "ruff>=0.1.7",
    "codespell",
    "types-PyYAML",
]
tox = [
    "tox",
    "tox-pdm>=0.5",
]
release = [
    "emotional",
]


[tool.pdm.scripts]
test.help = "Run the test suite"
test.cmd = "pytest"

lint.help = "Lint all tracked files using pre-commit"
lint.cmd = "pre-commit run --all-files"

format.help = "Format the code according to known rules"
format.composite = [
    "codespell --write-changes",
    "ruff --fix-only --show-fixes src tests",
    "black src tests",
]

typing.help = "Full typing linting (includes imported packages and uncommmited files)"
typing.cmd = "mypy src tests --warn-unused-ignores"

cover.help = "Run the test suite with coverage"
pre_cover = "coverage erase"
cover.composite = [
  "coverage run --append -m pytest {args} --junitxml=reports/tests.xml",
  "coverage report",
  "coverage html -d reports/coverage",
  "coverage xml -o reports/coverage.xml",
]

"cover:all".help = "Run the test suite against all supported Python version"
"pre_cover:all" = "coverage erase"
"cover:all".cmd = "tox --parallel"

changelog.help = "Update the changelog"
changelog.cmd = "cz changelog"


[tool.commitizen]
name = "emotional"
github = "noirbizarre/pytest-copier"
order_by_scope = true
version_provider = "scm"
major_version_zero = true  # Remove this line for the first 1.x release


[tool.pdm.ide]
linters = ["ruff"]
formatter = "black"
testing = "pytest"


[tool.pytest.ini_options]
addopts = "-ra"
norecursedirs = ".git build dist"
testpaths = [
  "src/",
  "tests/",
]


[tool.coverage.run]
source = ["src"]
branch = true
omit = [
  "tests/*",
]

[tool.coverage.report]
exclude_also = [
  'def __repr__',
  'if TYPE_CHECKING:',
]
ignore_errors = true


[tool.black]
# Black adds 10% tolernace which makes it to 110
# See:
#  https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length
line-length = 100


[tool.ruff]
line-length = 110
respect-gitignore = true
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # McCabe # fake8-comprehension
    "C",
    # Pyupgrade
    "UP",
    # isort
    "I001"
]
src = ["src", "tests"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Facade pattern

[tool.ruff.isort]
known-first-party = ["pytest_copier"]
known-third-party = ["pytest"]
lines-between-types = 1


[tool.mypy]
exclude = [
  "docs",
  "build",
  "dist",
]

[tool.codespell]
skip = "./reports"
